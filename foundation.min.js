// Författare: Robin Svensson
// Datum: 2023-02-28


  // Funktion för att rensa bort allt innehåll i ::before och ::after pseudo-elementen och endast behålla texten
function cleanHTML() {
  // Hämta alla element som har pseudo-elementen ::before eller ::after
  const elmsWithPseudo = document.querySelectorAll('*::before, *::after');
  
  // Loopa igenom alla element och rensa bort allt innehåll i ::before och ::after
  for (let i = 0; i < elmsWithPseudo.length; i++) {
    elmsWithPseudo[i].innerHTML = '';
  }
  
  // Skapa en <span> tagg och lägg till all text från direkt barn av två andra div-element och en element 
  med id:et "page-container", som i sin tur är ett direkt barn av body-taggen med dess innehåll.
  const span = document.createElement('span');
  span.innerText = document.querySelector('body > #<page-container > div > div > div:first-child');

  
  // Rensa bort allt innehåll från <body> elementet
  document.querySelector('body > #page-container > div > div > div:first-child').innerHTML = '';
  
  // Lägg till <span> elementet som child till <body> elementet
  document.querySelector('body > #page-container > div > div > div:first-child').appendChild(span);
}

  // Kör funktionen cleanHTML när sidan har laddats window.addEventListener('load', cleanHTML);


// Författare: Robin Svensson
// Datum: 2023-02-28	


function mergeElementsByClass(className, elementType) {
  var elements = document.getElementsByClassName(className);
  var i, j, currentElem, nextElem;

  for (i = 0; i < elements.length; i++) {
    currentElem = elements[i];

    for (j = i + 1; j < elements.length; j++) {
      nextElem = elements[j];

      if (currentElem.classList.contains(className) && nextElem.classList.contains(className)) {
        if (currentElem.nextElementSibling === nextElem && nextElem.tagName.toLowerCase() === elementType) {
          var wrapper = document.createElement(elementType);
          wrapper.className = className;
          currentElem.parentNode.insertBefore(wrapper, currentElem);
          wrapper.appendChild(currentElem);
          wrapper.appendChild(nextElem);
          i--; // Since we merged two elements, decrement i to account for the removed element
          break; // Break the loop and start over from the beginning
        }
      } else {
        break; // If the next element doesn't have the same class, stop checking
      }
    }
  }
}


// Författare: Robin Svensson
// Datum: 2023-02-27

  // Hitta alla span-taggar på sidan
  var spans = document.querySelectorAll('span');

    // Kontrollera om "föräldern" redan innehåller span-taggens innehåll
    if (!parent.innerHTML.includes(span.innerHTML)) {
      // Lägg till span-taggens innehåll till "föräldern"
      parent.innerHTML = parent.innerHTML.replace(span.outerHTML, span.innerHTML);
    } else {
      // Ta bort span-taggen eftersom innehållet redan finns i "föräldern"
      parent.removeChild(span);
    }
